## [Start] Determine request authentication mode **
#if( $util.isNullOrEmpty($authMode) && !$util.isNull($ctx.identity) && !$util.isNull($ctx.identity.sub) && !$util.isNull($ctx.identity.issuer) && !$util.isNull($ctx.identity.username) && !$util.isNull($ctx.identity.claims) && !$util.isNull($ctx.identity.sourceIp) && !$util.isNull($ctx.identity.defaultAuthStrategy) )
  #set( $authMode = "userPools" )
#end
## [End] Determine request authentication mode **
## [Start] Check authMode and execute owner/group checks **
#if( $authMode == "userPools" )
  #set( $authorized = false )
  ## Authorization: Allow only if you are memeber of the group
  #set( $allowedMembers = $util.defaultIfNull($ctx.result.members, []) )
  #set( $identityValue = $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), "___xamznone____"))
  #if( $util.isList($allowedMembers) )
    #foreach( $allowedMember in $allowedMembers )
      #if( $allowedMember == $identityValue )
        #set( $authorized = true )
      #end
    #end
  #end

  ## [End] Owner Authorization Checks **


  ## [Start] Throw if unauthorized **
  #if( $authorized == false)
    $util.unauthorized()
  #end
  ## [End] Throw if unauthorized **
#else
   $util.unauthorized()
#end
## [End] Check authMode and execute owner/group checks **

$util.toJson(null)